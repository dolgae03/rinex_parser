#----------------------------------------------------------------------------------
[SOFTWARE]
#----------------------------------------------------------------------------------
# goGPS config file
version = "1.0 beta 1"

#----------------------------------------------------------------------------------
[PROJECT]
#----------------------------------------------------------------------------------
# Name of the project
prj_name = "IGS extended tropo comparison"
# Home of the project
prj_home = "../../../../../../../../media/NAS/goGPS_data/project/IGS_2017_comparison"

# NOTES ON THE NAMING CONVENTIONS:
# Special Keywords that can be used in file names:
#  - ${WWWW}    4 char GPS week
#  - ${WWWWD} 4+1 char GPS week + day of the week
#  - ${D}       1 char day of the week
#  - ${6H}      2 char GPS hour (00, 06, 12, 18)
#  - ${HH}      2 char GPS hour
#  - ${QQ}      2 char GPS quarter of hour (00, 15, 30, 45)
#  - ${5M}      2 char GPS five minutes (05, 10, ... , 55)
#  - ${YYDOY} 2+3 char GPS year + day of year
#  - ${YYYY}    4 char GPS year
#  - ${YY}      2 char GPS year
#  - ${MM}      2 char GPS month
#  - ${DD}      2 char GPS day
#  - ${DOY}     3 char GPS day of the year
#  - ${S}       1 char session

#----------------------------------------------------------------------------------
[SESSION]
#----------------------------------------------------------------------------------
# "sss_" parameters define the session of observation, they are used
#        to substitute special keywords in file names
# Working session - first data of observation to consider (yyyy-mm-dd <HH:MM:SS>)
# mainly used to detect the name of the file to process
sss_date_start = "2017-11-23 00:00:00"
# Working session - last data of observation to consider (yyyy-mm-dd <HH:MM:SS>)
sss_date_stop = "2017-11-28 23:59:59"
# Id character sequence to be use for the session $(S) special keyword
# (e.g. "01233456789ABCabc")
sss_id_list = "0"
# First session id (char of sss_id_list)
sss_id_start = "0"
# Last session id (char of sss_id_list)
sss_id_stop = "0"
# Flag to base the sessions on the RINEX files
sss_file_based = 0
# Session duration in seconds
sss_duration = 86400
# Session buffer in second [left right]
sss_buffer = [0 0]

# Computing the troposphere on multiple sessions (even with buffering)
# could produce discontinuous series, at the change of session.
# To produce a smooth solution, the session from the past can be 
# connected to the new one weightning the two buffered areas.
flag_smooth_tropo_out = 0

#----------------------------------------------------------------------------------
[STATION]
#----------------------------------------------------------------------------------
# Directory containing the data (static)
obs_dir = "RINEX"
# File name of the receivers (can contain special keywords)
obs_name = ["antc${DOY}${S}.${YY}o" "ascg${DOY}${S}.${YY}o" "bzrg${DOY}${S}.${YY}o" "cedu${DOY}${S}.${YY}o" "chti${DOY}${S}.${YY}o" "dav1${DOY}${S}.${YY}o" "flrs${DOY}${S}.${YY}o" "hnpt${DOY}${S}.${YY}o" "iisc${DOY}${S}.${YY}o" "irkj${DOY}${S}.${YY}o" "isba${DOY}${S}.${YY}o" "jfng${DOY}${S}.${YY}o" "kokv${DOY}${S}.${YY}o" "lama${DOY}${S}.${YY}o" "madr${DOY}${S}.${YY}o" "mobn${DOY}${S}.${YY}o" "nist${DOY}${S}.${YY}o" "nklg${DOY}${S}.${YY}o" "nril${DOY}${S}.${YY}o" "nya1${DOY}${S}.${YY}o" "pets${DOY}${S}.${YY}o" "rio2${DOY}${S}.${YY}o" "salu${DOY}${S}.${YY}o" "stjo${DOY}${S}.${YY}o" "unsa${DOY}${S}.${YY}o" "urum${DOY}${S}.${YY}o" "usud${DOY}${S}.${YY}o" "vacs${DOY}${S}.${YY}o"]

# Directory of coordinates files
crd_dir = "../../station/CRD"
# Name of coordinates (CRD) file
crd_name = ""
# Set the a-priori information on the motion of the receiver
rec_dyn_mode = 0
#  0: static
#  1: constant velocity
#  2: constant acceleration
#  3: variable (stop-go-stop)

# Directory of meteorological data
met_dir = "../../station/MET"
# Meteorological file (when found it will be used)
met_name = ""
# Directory of ocean loading files
ocean_dir = "../../station/ocean"
# Name of ocean loading file (when found it will be used)
ocean_name = "igs2017comp.blq"

#----------------------------------------------------------------------------------
[REFERENCE]
#----------------------------------------------------------------------------------
# Directory of Earth rotation/orientation parameters (ERP) files
erp_dir = "../../reference/ERP"
# Directory of International Geomagnetic Reference Frame (IGRF) files
igrf_dir = "../../reference/IGRF"
# Name of IGRF file
igrf_name = "igrf12coeff.txt"
# Directory of Geoid files
geoid_dir = "../../reference/geoid"
# Filename in Geoid dir containing the map of ondulation of the geoid
geoid_name = "geoid_EGM2008_05.mat"
# Directory of Ionospheric Models files
iono_dir = "../../reference/IONO"
# Directory of Atmospheric Loading Models files
atm_load_dir = "../../reference/ATM_LOAD/${YYYY}"
# Directory of VMF Coeficents
vmf_dir = "../../reference/VMF/${YYYY}"

#----------------------------------------------------------------------------------
[COMPUTATION_CENTER]
#----------------------------------------------------------------------------------
# List of the computeation center to be used for ephemeris retrival
# Every product is searched locally, when not found is downloaded
# When the file is not found, the system fall back on the next available
# The config file "remote_resource.ini" of the products is stored in:
#  => ""

# Try to download missing resources from the net (0 / 1)

flag_download = 1
# Preferred ephemeris type, valid only for source "igs",
# accepted values: "final" "rapid" "ultra" "broadcast"
preferred_eph = ["final"]
# Preferred ionospheric type,
# accepted values: "final" "predicted1" "predicted2" "broadcast"
preferred_iono = ["final" "predicted1" "predicted2"]
# SELECTED computational center (e.g. default, igs_glo, igs_gps, code, code_mgex, gfz, jaxa
selected_center = ["default"]

#----------------------------------------------------------------------------------
[SATELLITE]
#----------------------------------------------------------------------------------
# Directory of Ephemeris files
eph_dir = "../../satellite/EPH/${WWWW}"

# Directory of clock offset files
clk_dir = "../../satellite/CLK/${WWWW}"

# Directory of CRX files (containing satellite problems)
crx_dir = "../../satellite/CRX"

# Directory of DCB files (Differential Code Biases)
dcb_dir = "../../satellite/DCB"

# Directory of EMS files (EGNOS Message Server).
ems_dir = "../../satellite/SBAS/EMS"

#----------------------------------------------------------------------------------
[ANTENNA]
#----------------------------------------------------------------------------------
# Directory of PCO - PCV antex (ATX) files
atx_dir = "../../antenna/ATX"
# PCO - PCV antex (ATX) file
atx_name = "I14.ATX"

#----------------------------------------------------------------------------------
[OUTPUT]
#----------------------------------------------------------------------------------

# Base dir that is going to store the ouput data files
out_dir = "out"
# Prefix ("name") to add to the output (can contain special keywords / subfolders)
out_prefix = ""

#----------------------------------------------------------------------------------
[ADV RECEIVERS]
#----------------------------------------------------------------------------------
# Default STD of code observations [m]
std_code = 3
# Default STD of phase observations [m]
std_phase = 0.03
# Default STD of iono-free phase observations [m
std_phase_if = 0.009
# Default STD of a priori receiver clock
sigma0_clock = 4.47e-09
# Default STD of receiver clock
sigma0_r_clock = 31

# Read master position from RINEX (0/1)

#----------------------------------------------------------------------------------
[DATA_SELECTION]
#----------------------------------------------------------------------------------
# Constallations for the processing:
# GPS satellite system
GPS_is_active = 1
# Frequencies to be used when this constellation is active
GPS_L1 = 1
GPS_L2 = 1
GPS_L5 = 0

# GLONASS satellite system
GLO_is_active = 0
# Frequencies to be used when this constellation is active
GLO_G1 = 0
GLO_G2 = 0
GLO_G3 = 0

# Galileo satellite system
GAL_is_active = 0
# Frequencies to be used when this constellation is active
GAL_E1 = 0
GAL_E5a = 0
GAL_E5b = 0
GAL_E5 = 0
GAL_E6 = 0

# QZSS satellite system
QZS_is_active = 0
# Frequencies to be used when this constellation is active
QZS_L1 = 0
QZS_L2 = 0
QZS_L5 = 0
QZS_LEX6 = 0

# BeiDou satellite system
BDS_is_active = 0
# Frequencies to be used when this constellation is active
BDS_B1 = 0
BDS_B2 = 0
BDS_B3 = 0

# IRNSS satellite system
IRN_is_active = 0
# Frequencies to be used when this constellation is active
IRN_L5 = 0
IRN_S = 0

# SBAS satellite system
SBS_is_active = 0
# Frequencies to be used when this constellation is active
SBS_L1 = 0
SBS_L5 = 0

# Minimum number of satellite per epoch
min_n_sat = 2
# Cut-off [degrees]
cut_off = 15
# Signal-to-noise ratio threshold [dB]
snr_thr = 38
# Minimum length an arc (a satellite to be used must be seen for a number of
# consecutive epochs equal or greater than this value)
min_arc = 1

# Enable outlier detection (0/1)
flag_outlier = 1
# Threshold on code LS estimation error [m]
pp_spp_thr = 100
# Threshold on maximum residual of code obs [m]
pp_max_code_err_thr = 30
# Threshold on maximum residual of phase obs [m]
pp_max_phase_err_thr = 0.2

#----------------------------------------------------------------------------------
[PROCESSING]
#----------------------------------------------------------------------------------

# Enable cycle slip repair (0/1)
flag_repair = 0

# Processing using weighting mode:
w_mode = 1
#  0: same weight for all the observations
#  1: weight based on satellite elevation (sin)
#  2: weight based on satellite elevation (exp)

# PPP processing using reweight/snooping mode:
ppp_reweight_mode = 1
# 1: none
# 2: re-weight Huber
# 3: re-weight Huber (no threshold)
# 4: re-weight Danish
# 5: re-weight DanishWM
# 6: re-weight Tukey
# 7: simple snooping
# 8: smart snooping

# PPP enable ambiguity fixing
flag_ppp_amb_fix = 0
# NET processing using reweight/snooping mode:
net_reweight_mode = 1
# 1: none
# 2: simple 4 loops

# Enable ambiguity fixing
flag_net_amb_fix = 0

flag_amb_pass = 0

# Enable corrections
# Enable solid earth tide corrections
flag_solid_earth = 1
# Enable pole tide corrections
flag_pole_tide = 1
# Enable phase wind up corrections
flag_phase_wind = 1
# Enable Shapiro delay corrections
flag_shapiro = 1
# Enable ocean loading corrections
flag_ocean_load = 0
# Enable atmospheric loading corrections
flag_atm_load = 0
# Enable high order ionospheric and bending corrections
flag_hoi = 0
# Enable receiver pcv corrections
flag_rec_pcv = 1
# Enable a-priori 
flag_apr_iono = 1

# Separate the antenna phase center for each constellations
flag_separate_apc = 0
# Estimate additional coordinates set
flag_coo_rate = 0
# Rate of the additional coordiates
coo_rates = [0 0 0]
#----------------------------------------------------------------------------------
[ATMOSPHERE]
#----------------------------------------------------------------------------------
# Management of ionosphere
iono_management = 1
#  1: Iono free
#  2: smoothed geometry free re-applyed to observables
#  3: external model

# Ionospheric model
iono_model = 3
#  1: no model
#  2: Klobuchar model
#  3: IONEX

# Compute tropospheric indicators (e.g. ZTD):
flag_tropo = 1
flag_tropo_gradient = 1

# A-priori zenith delay model
zd_model = 2
#  1: Saastamoinen model
#  2: Vienna Mapping Function gridded

# Mapping function
mapping_function = 2
#  1: Global Mapping Function
#  2: Vienna Mapping Function gridded
#  3: Niell Mapping Function

# Meteo data
meteo_data = 2
#  1: standard atmosphere
#  2: Global Pressure Temperature Model
#  3: MET file

#----------------------------------------------------------------------------------
[ADV ATMOSPHERE]
#----------------------------------------------------------------------------------
# Standard deviation of tropospheric delay [m/h] (default = 0.0150)
std_tropo = 0.003
# Standard deviation of tropospheric gradient [m/h] (default = 0.0010)
std_tropo_gradient = 0.0003
# Standard deviation of clock [m/h] (default = 0.0010)
std_clock = 1e+14

#----------------------------------------------------------------------------------
[OUT TO KEEP]
#----------------------------------------------------------------------------------
# Results to be keep in the "out" object stored in rec

# Keep Dt
flag_out_dt = 1
# Keep PWV
flag_out_pwv = 1
# Keep ZWD
flag_out_zwd = 1
# Keep ZTD
flag_out_ztd = 1
# Keep tropospheric gradientents
flag_out_tropo_g = 1
# Keep a-priori troposphere
flag_out_apr_tropo = 1
# Keep pressure / temperature / humidity
flag_out_pth = 1
# Keep satellite outlier flags and cycle slips
flag_out_ocs = 1
# Keep satellite quality (snr)
flag_out_quality = 1
# Keep satellite azimuth and elevation
flag_out_azel = 1
# Keep satellite satellite residuals
flag_out_res = 1
# Keep satellite mapping functions (wet / hydrostatic)
flag_out_mf = 1

#----------------------------------------------------------------------------------
[COMMANDS]
#----------------------------------------------------------------------------------
# goGPS command list
# NOTE: All the commands will be executed for each session
# Accepted commands:
# --------------------------------------------------------------------------------
#  - PINIT
#  - PKILL
#  - LOAD
#  - EMPTY
#  - AZEL
#  - BASICPP
#  - PREPRO
#  - CODEPP
#  - PPP
#  - NET
#  - SEID
#  - REMIONO
#  - KEEP
#  - SYNC
#  - OUTDET
#  - SHOW
#  - EXPORT
#  - PUSHOUT
#  - REMSAT
# 
# Commands description:
# --------------------------------------------------------------------------------
#  - PINIT     Parallel init => r n slaves
# 
#              Parameters:
#                -n=<num_slaves>    minimum number of parallel slaves to request
# 
# --------------------------------------------------------------------------------
#  - PKILL     Parallel kill all the slaves
# 
# --------------------------------------------------------------------------------
#  - LOAD      Import the RINEX file linked with this receiver
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                -s=<sat_list>      active constellations (e.g. -s=GRE)
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
# 
# --------------------------------------------------------------------------------
#  - EMPTY     Empty the receiver
# 
#              Mandatory receivers: T
# 
# --------------------------------------------------------------------------------
#  - AZEL      Compute Azimuth and elevation 
# 
#              Mandatory receivers: T
# 
# --------------------------------------------------------------------------------
#  - BASICPP   Basic Point positioning with no correction
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      active constellations (e.g. -s=GRE)
# 
# --------------------------------------------------------------------------------
#  - PREPRO    Code positioning, computation of satellite positions and various
#              corrections
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      active constellations (e.g. -s=GRE)
# 
# --------------------------------------------------------------------------------
#  - CODEPP    Code positioning
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      active constellations (e.g. -s=GRE)
# 
# --------------------------------------------------------------------------------
#  - PPP       Precise Point Positioning using carrier phase observations
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      active constellations (e.g. -s=GRE)
#                --sync             use syncronized time only
# 
# --------------------------------------------------------------------------------
#  - NET       Network solution using undifferenced carrier phase observations
# 
#              Mandatory receivers: T, R
# 
#              Parameters:
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      active constellations (e.g. -s=GRE)
#                --sync             use syncronized time only
#                COO_CRD          Coordinates Bernese .CRD file
#                I reduce for ionosphere delay
# 
# --------------------------------------------------------------------------------
#  - SEID      Generate a Synthesised L2 on a target receiver 
#              using n (dual frequencies) reference stations
# 
#              Mandatory receivers: R, T
# 
# --------------------------------------------------------------------------------
#  - REMIONO   Remove ionosphere from observations on a target receiver 
#              using n (dual frequencies) reference stations
# 
#              Mandatory receivers: R, T
# 
# --------------------------------------------------------------------------------
#  - KEEP      Keep in the object the data of a certain constallation
#              at a certain rate
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
#                -s=<sat_list>      active constellations (e.g. -s=GRE)
#                -e=<elevation>     elevation in degree (e.g. -e=7)
#                -q=<snrthr>        SNR threshold in dbHZ on L1 (e.g. -q=7)
# 
# --------------------------------------------------------------------------------
#  - SYNC      Syncronize all the receivers at the same rate 
#              (with the minimal data span)
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                @<rate>            processing rate in seconds (e.g. @30s, -r=30s)
# 
# --------------------------------------------------------------------------------
#  - OUTDET    Force outlier and cycle slip detection
# 
#              Mandatory receivers: T
# 
# --------------------------------------------------------------------------------
#  - SHOW      Display various plots / images
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                DA               Data Availability
#                ENU              East Nord Up positions
#                ENUBSL           East Nord Up baseline
#                XYZ              XYZ Earth Fixed Earth centered positions
#                CK               Clock errors
#                SNR              Signal to Noise Ratio (polar plot)
#                OCS              Outliers and cycle slips
#                OCSP             Outliers and cycle slips (polar plot)
#                RES              Residual plot
#                RES_SKY          Residual sky plot
#                RES_SKYP         Residual sky plot (polar plot)
#                ZTD              Zenithal Total Delay
#                PWV              Precipitable Water Vapour
#                STD              Zenithal Total Delay with slants
#                RES_STD          Slants Total Delay residuals (polar plot)
# 
# --------------------------------------------------------------------------------
#  - EXPORT    Export results
# 
#              Mandatory receivers: T
# 
#              Parameters:
#                REC_MAT          Receiver object as .mat file
#                TRP_SNX          Tropo parameters as SINEX file
#                TRP_MAT          Tropo parameters matlab as .mat file
# 
# --------------------------------------------------------------------------------
#  - PUSHOUT   Push results in output
# 
#              Mandatory receivers: T
# 
# --------------------------------------------------------------------------------
#  - REMSAT    Remove satellites
# 
#              Mandatory receivers: T
# 
# --------------------------------------------------------------------------------
#  - FOR       For session loop start
# 
#              Mandatory session: S
# 
# --------------------------------------------------------------------------------
#  - PAR       Parallel section start (run on targets)
#              use T$ as target in this section
# 
#              Mandatory session: T, P
# 
# --------------------------------------------------------------------------------
#  - ENDFOR    For loop end
# 
# --------------------------------------------------------------------------------
#  - ENDPAR    Parallel section end
# 
# --------------------------------------------------------------------------------
# 
#    Note: "T" refers to Target receiver
#          "R" refers to reference receiver
#          Receivers can be identified with their id (as defined in "obs_name")
#          It is possible to provide multiple receivers (e.g. T* or T1:4 or T1,3:5)
# 
cmd_001 = "FOR S*"
cmd_002 = "LOAD T* @30s -s=G"
cmd_003 = "PREPRO T*"
cmd_004 = "PPP T*"
cmd_005 = "ENDFOR"

